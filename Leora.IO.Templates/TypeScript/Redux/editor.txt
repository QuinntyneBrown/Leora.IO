import { CanActivate, Component } from "../core/component-decorators";
import { {{ entityNamePascalCase }}ActionCreator } from "./{{ entityNameSnakeCase }}.actions";

@Component({
    route: "/{{ entityNameSnakeCase }}/edit/:id",
    templateUrl: "wwwroot/{{ entityNameSnakeCase }}/{{ entityNameSnakeCase }}-editor.component.html",
    selector: "{{ entityNameSnakeCase }}-editor",
    providers: ["$location","{{ entityNameCamelCase }}ActionCreator","invokeAsync"]
})
@CanActivate(["$route", "invokeAsync", "{{ entityNameCamelCase }}ActionCreator", ($route, invokeAsync, {{ entityNameCamelCase }}ActionCreator: {{ entityNamePascalCase }}ActionCreator) => {
    var id = $route.current.params.id;
    return invokeAsync({
        action: {{ entityNameCamelCase }}ActionCreator.getById,
        params: { id: id }
    });
}])
export class {{ entityNamePascalCase }}EditorComponent {
    constructor(private $location: angular.ILocationService, private {{ entityNameCamelCase }}ActionCreator: {{ entityNamePascalCase }}ActionCreator, private invokeAsync) { }

    storeOnChange = state => { }

    addOrUpdate = () => {
        this.invokeAsync({
            action: this.{{ entityNameCamelCase }}ActionCreator.addOrUpdate,
            params: {
                data: {
                    id: this.id,
                }
            }
        }).then(() => {
            if (!this.id && this.entities.filter(entity => entity.name === this.name).length > 0) {

            }
            else {

            }
        });
    } 
    
    create = () => {
        this.{{ entityNameCamelCase }}ActionCreator.create();
    }

    remove = () => this.{{ entityNameCamelCase }}ActionCreator.remove({ id: this.id });
         
    id;
	name;
	entities;
    baseUrl;
}