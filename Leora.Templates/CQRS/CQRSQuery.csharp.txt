using MediatR;
using {{ rootNamespacename }}.Data;
using {{ rootNamespacename }}.Features.Core;
using System.Collections.Generic;
using System.Threading.Tasks;
using System.Linq;
using System.Data.Entity;

namespace {{ namespacename }}
{
    public class {{ namePascalCase }}Query
    {
        public class {{ namePascalCase }}Request : IRequest<{{ namePascalCase }}Response>
        {
            public {{ namePascalCase }}Request()
            {

            }
        }

        public class {{ namePascalCase }}Response
        {
            public {{ namePascalCase }}Response()
            {

            }
        }

        public class {{ namePascalCase }}Handler : IAsyncRequestHandler<{{ namePascalCase }}Request, {{ namePascalCase }}Response>
        {
            public {{ namePascalCase }}Handler({{ rootNamespacename }}Context context, ICache cache)
            {
                _context = context;
                _cache = cache;
            }

            public async Task<{{ namePascalCase }}Response> Handle({{ namePascalCase }}Request request)
            {
                throw new System.NotImplementedException();
            }

            private readonly {{ rootNamespacename }}Context _context;
            private readonly ICache _cache;
        }

    }

}
