using {{ namespacename }}.Contracts;
using {{ namespacename }}.Options;
using Leora.Models;
using Leora.Services.Contracts;
using static System.IO.File;

namespace {{ namespacename }}
{
    public class Generate{{ entityNamePascalCase }}Command : BaseCommand<Generate{{ entityNamePascalCase }}Options>, IGenerate{{ entityNamePascalCase }}Command
    {
        public Generate{{ entityNamePascalCase }}Command(ITemplateManager templateManager, IDotNetTemplateProcessor templateProcessor, INamingConventionConverter namingConventionConverter, IProjectManager projectManager, IFileWriter fileWriter, INamespaceManager namespaceManager)
            :base(templateManager,templateProcessor,namingConventionConverter,projectManager,fileWriter,namespaceManager) {
        }
        public override int Run(Generate{{ entityNamePascalCase }}Options options) => Run(options.Name, options.Directory);        

        public int Run(string name, string directory)
        {
            int exitCode = 1;
            
            return exitCode;
        }

    }
}
