using MediatR;
using {{ rootNamespacename }}.Data;
using {{ rootNamespacename }}.Features.Core;
using System.Collections.Generic;
using System.Threading.Tasks;
using System.Linq;
using System.Threading;
using Microsoft.EntityFrameworkCore;

namespace {{ namespacename }}
{
    public class {{ entityNamePascalCase }}Command
    {
        public class {{ entityNamePascalCase }}Request : IRequest<{{ entityNamePascalCase }}Response>
        {
            public {{ entityNamePascalCase }}Request()
            {

            }
        }

        public class {{ entityNamePascalCase }}Response
        {
            public {{ entityNamePascalCase }}Response()
            {

            }
        }

        public class {{ entityNamePascalCase }}Handler : IAsyncRequestHandler<{{ entityNamePascalCase }}Request, {{ entityNamePascalCase }}Response>
        {
            public {{ entityNamePascalCase }}Handler({{ rootNamespacename }}Context context, ICache cache)
            {
                _context = context;
                _cache = cache;
            }

            public async Task<{{ entityNamePascalCase }}Response> Handle({{ entityNamePascalCase }}Request request)
            {
                throw new System.NotImplementedException();
            }

            private readonly {{ rootNamespacename }}Context _context;
            private readonly ICache _cache;
        }

    }

}
