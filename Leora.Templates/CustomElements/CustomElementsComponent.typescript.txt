import { loadStyles } from "../utils";
let customElements:any;
let template = require("./{{ entityNameSnakeCase }}.component.html");
let styles = require("./{{ entityNameSnakeCase }}.component.scss");

const prefix: string = "{{ prefix }}";
const selector: string = "{{ entityNameSnakeCase }}";

let customInnerHTML = [
    "<style>", 
    require("./{{ entityNameSnakeCase }}.component.scss"), 
    "</style>", 
    require("./{{ entityNameSnakeCase }}.component.html")
    ].join(" ");

if(!document.head["createShadowRoot"]) {
    styles = styles.replace(new RegExp(":host", 'g'), `${prefix}-${selector}`)
    loadStyles(styles);
}

export class {{ entityNamePascalCase }}Component extends HTMLElement {
    constructor() {
        super();
    }

    static get observedAttributes () {
        return [];
    }

    connectedCallback() {

		if(document.head["createShadowRoot"]) {
            this._root = (this as any).attachShadow({mode: 'open'});
            this._root.innerHTML = customInnerHTML;            
        } else {
            this.innerHTML = template;
        }  
    }

    disconnectedCallback() {

    }

    attributeChangedCallback (name, oldValue, newValue) {

    }

	private _root;
}

document.addEventListener("DOMContentLoaded",function() {
    (window as any).customElements.define(`${prefix}-${selector}`,{{ entityNamePascalCase }}Component);
});
