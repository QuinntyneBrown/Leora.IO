import { Injectable } from "@angular/core";
import { Store } from "@ngrx/store";
import { {{ entityNamePascalCase }}Service } from "../services";
import { AppState, AppStore } from "../store";
import { {{ entityNameAllCaps }}_ADD_SUCCESS, {{ entityNameAllCaps }}_GET_SUCCESS, {{ entityNameAllCaps }}_REMOVE_SUCCESS } from "../constants";
import { {{ entityNamePascalCase }} } from "../models";
import { Observable } from "rxjs";
import { guid } from "ng2-utilities";

@Injectable()
export class {{ entityNamePascalCase }}Actions {
    constructor(private _{{ entityNameCamelCase }}Service: {{ entityNamePascalCase }}Service, private _store: AppStore) { }

    public add({{ entityNameCamelCase }}: {{ entityNamePascalCase }}) {
        const newGuid = guid();
        this._{{ entityNameCamelCase }}Service.add({{ entityNameCamelCase }})
            .subscribe({{ entityNameCamelCase }} => {
                this._store.dispatch({
                    type: {{ entityNameAllCaps }}_ADD_SUCCESS,
                    payload: {{ entityNameCamelCase }}
                },newGuid);                
            });
        return newGuid;
    }

    public get() {                          
        return this._{{ entityNameCamelCase }}Service.get()
            .subscribe({{ entityNameCamelCase }}s => {
                this._store.dispatch({
                    type: {{ entityNameAllCaps }}_GET_SUCCESS,
                    payload: {{ entityNameCamelCase }}s
                });
                return true;
            });
    }

    public remove(options: {id: number}) {
        return this._{{ entityNameCamelCase }}Service.remove({ id: options.id })
            .subscribe({{ entityNameCamelCase }} => {
                this._store.dispatch({
                    type: {{ entityNameAllCaps }}_REMOVE_SUCCESS,
                    payload: options.id
                });
                return true;
            });
    }

    public getById(options: { id: number }) {
        return this._{{ entityNameCamelCase }}Service.getById({ id: options.id })
            .subscribe({{ entityNameCamelCase }} => {
                this._store.dispatch({
                    type: {{ entityNameAllCaps }}_GET_SUCCESS,
                    payload: [{{ entityNameCamelCase }}]
                });
                return true;
            });
    }
}