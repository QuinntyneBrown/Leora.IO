import { Component } from "@angular/core";
import { Subject } from "rxjs/Subject";
import { {{ entityNamePascalCase }}sService } from "./{{ entityNameCamelCase }}s.service";
import { Router } from "@angular/router";
import { pluckOut } from "../shared/utilities/pluck-out";

@Component({
    templateUrl: "./{{ entityNameSnakeCase }}-list-page.component.html",
    styleUrls: [
        "../shared/components/page.css",
        "./{{ entityNameSnakeCase }}-list-page.component.css"
    ],
    selector: "ce-{{ entityNameSnakeCase }}-list-page"
})
export class {{ entityNamePascalCase }}ListPageComponent { 
    constructor(
        private _router: Router,
        private _{{ entityNameCamelCase }}sService: {{ entityNamePascalCase }}sService) { }

    public handleEditClick($event) {        
        this._router.navigateByUrl(`/{{ entityNameLowerCase }}s/edit/${$event.{{ entityNameCamelCase }}.id}`);
    }

    public handleDeleteClick($event) {
        this._{{ entityNameCamelCase }}sService.remove({ {{ entityNameCamelCase }}: $event.{{ entityNameCamelCase }} })
            .takeUntil(this._ngUnsubscribe)
            .subscribe();

        pluckOut({ items: this.{{ entityNameCamelCase }}s, value: $event.{{ entityNameCamelCase }}.id });
    }

    public ngOnInit() {
        this._{{ entityNameCamelCase }}sService.get()
            .takeUntil(this._ngUnsubscribe)
            .map(data => this.{{ entityNameCamelCase }}s = data.{{ entityNameCamelCase }}s)
            .subscribe();
    }

    private _ngUnsubscribe: Subject<void> = new Subject<void>();

    ngOnDestroy() {
         this._ngUnsubscribe.next();	
    }

    public {{ entityNameCamelCase }}s: Array<any> = [];
}
