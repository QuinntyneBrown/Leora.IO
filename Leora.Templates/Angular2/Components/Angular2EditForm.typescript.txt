import {
    Component,
    ChangeDetectionStrategy,
    Input,
    OnInit,
    EventEmitter,
    Output,
    AfterViewInit,
    AfterContentInit,
    Renderer,
    ElementRef,
    ViewEncapsulation
} from "@angular/core";

import {
    FormGroup,
    FormControl,
    Validators
} from "@angular/forms";

@Component({
    templateUrl: "./{{ entityNameSnakeCase }}-edit-form.component.html",
    styleUrls: ["./{{ entityNameSnakeCase }}-edit-form.component.css"],
    selector: "cs-{{ entityNameSnakeCase }}-edit-form",
    encapsulation: ViewEncapsulation.Native
})
export class {{ entityNamePascalCase }}EditFormComponent { 

    public form = new FormGroup({
        {{ entityNameCamelCase }}Id: new FormControl(0),
        name: new FormControl('', [Validators.required])        
    });

    @Output()
    public tryToSave{{ entityNamePascalCase }}: EventEmitter<any> = new EventEmitter();

    @Input("{{ entityNameLowerCase }}")
    public set {{ entityNameCamelCase }}(value: any) {
        this.form.patchValue({ '{{ entityNameCamelCase }}Id': value.{{ entityNameCamelCase }}Id });
        this.form.patchValue({ 'name': value.name });        
    }  
}
